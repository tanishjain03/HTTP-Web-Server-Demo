#ifndef ___TMWP
#define ___TMWP 13
#include<iostream>
#include<map>
using namespace std;
namespace tmwp
{
class Request
{
public:
char *method;
char *resource;
char *mimeType;
char isClientSideTechnologyResource;
int dataCount;
char ** data;
string forwardTo;
map<string,string> keyValues;
void setKeyValue(string k,string v);
string getValue(string k);
string get(string name);
void forward(string forwardTo);
};
class Response
{
private:
int clientSocketDescriptor;
bool isClosed;
void createHeader();
bool headerCreated;
public:
Response(int clientSocketDescriptor);
void write(const char *str);
void write(string str);
//overloading of more methods required for other primitive data types
void close();
};
class TMWebProjector
{
private:
int portNumber;
//char *url;
//void (*ptrOnRequest)(Request &,Response &);
map<string,void (*)(Request &,Response &)> requestMappings;
public:
TMWebProjector(int portNumber);
~TMWebProjector();
void onRequest(string url,void (*ptrOnRequest)(Request &,Response &));
void start();
};
}
#endif